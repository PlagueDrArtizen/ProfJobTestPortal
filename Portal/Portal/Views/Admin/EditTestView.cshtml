@model Portal.Models.EditTestViewModel

@{
    ViewBag.Title = "EditTestView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Редактирование/Создание теста</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TestId)
        <div class="form-group">
            <label class="control-label col-md-2">Название теста</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@if (Model.TestId.HasValue)
{

    <h4>
        Вопросы
    </h4>
    
    <p>@Html.ActionLink("Создать вопрос", "Question", "Admin", new { testId = Model.TestId.Value }, null)</p>
    
    <table class="table">
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                <tr>
                    <td>
                        <b>
                            #@(i + 1)
                        </b>
                        @Model.Questions[i].Text
                    </td>
                        <td>
                            @Html.ActionLink("Изменить", "Question", "Admin", new { testId = Model.TestId.Value, questionId = Model.Questions[i].QuestionId }, null) |
                            @Html.ActionLink("Удалить", "DeleteQuestion", "Admin", new { questionId = Model.Questions[i].QuestionId }, new { onclick = $"return confirm('Вы уверены что хотите удалить вопрос - {Model.Questions[i].Text}?');" })
                        </td>
                </tr>
            }
    </table>
}

